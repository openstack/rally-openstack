[DEFAULT]

#
# From oslo.log
#

# If set to true, the logging level will be set to DEBUG instead of
# the default INFO level. (boolean value)
# Note: This option can be changed without restarting.
#debug = false

# The name of a logging configuration file. This file is appended to
# any existing logging configuration files. For details about logging
# configuration files, see the Python logging module documentation.
# Note that when logging configuration files are used then all logging
# configuration is set in the configuration file and other logging
# configuration options are ignored (for example, log-date-format).
# (string value)
# Note: This option can be changed without restarting.
# Deprecated group/name - [DEFAULT]/log_config
#log_config_append = <None>

# Defines the format string for %%(asctime)s in log records. Default:
# %(default)s . This option is ignored if log_config_append is set.
# (string value)
#log_date_format = %Y-%m-%d %H:%M:%S

# (Optional) Name of log file to send logging output to. If no default
# is set, logging will go to stderr as defined by use_stderr. This
# option is ignored if log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logfile
#log_file = <None>

# (Optional) The base directory used for relative log_file  paths.
# This option is ignored if log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logdir
#log_dir = <None>

# Uses logging handler designed to watch file system. When log file is
# moved or removed this handler will open a new log file with
# specified path instantaneously. It makes sense only if log_file
# option is specified and Linux platform is used. This option is
# ignored if log_config_append is set. (boolean value)
#watch_log_file = false

# Use syslog for logging. Existing syslog format is DEPRECATED and
# will be changed later to honor RFC5424. This option is ignored if
# log_config_append is set. (boolean value)
#use_syslog = false

# Enable journald for logging. If running in a systemd environment you
# may wish to enable journal support. Doing so will use the journal
# native protocol which includes structured metadata in addition to
# log messages.This option is ignored if log_config_append is set.
# (boolean value)
#use_journal = false

# Syslog facility to receive log lines. This option is ignored if
# log_config_append is set. (string value)
#syslog_log_facility = LOG_USER

# Use JSON formatting for logging. This option is ignored if
# log_config_append is set. (boolean value)
#use_json = false

# Log output to standard error. This option is ignored if
# log_config_append is set. (boolean value)
#use_stderr = true

# Log output to Windows Event Log. (boolean value)
#use_eventlog = false

# The amount of time before the log files are rotated. This option is
# ignored unless log_rotation_type is setto "interval". (integer
# value)
#log_rotate_interval = 1

# Rotation interval type. The time of the last file change (or the
# time when the service was started) is used when scheduling the next
# rotation. (string value)
# Possible values:
# Seconds - <No description provided>
# Minutes - <No description provided>
# Hours - <No description provided>
# Days - <No description provided>
# Weekday - <No description provided>
# Midnight - <No description provided>
#log_rotate_interval_type = days

# Maximum number of rotated log files. (integer value)
#max_logfile_count = 30

# Log file maximum size in MB. This option is ignored if
# "log_rotation_type" is not set to "size". (integer value)
#max_logfile_size_mb = 200

# Log rotation type. (string value)
# Possible values:
# interval - Rotate logs at predefined time intervals.
# size - Rotate logs once they reach a predefined size.
# none - Do not rotate log files.
#log_rotation_type = none

# Format string to use for log messages with context. Used by
# oslo_log.formatters.ContextFormatter (string value)
#logging_context_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s

# Format string to use for log messages when context is undefined.
# Used by oslo_log.formatters.ContextFormatter (string value)
#logging_default_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s

# Additional data to append to log message when logging level for the
# message is DEBUG. Used by oslo_log.formatters.ContextFormatter
# (string value)
#logging_debug_format_suffix = %(funcName)s %(pathname)s:%(lineno)d

# Prefix each line of exception output with this format. Used by
# oslo_log.formatters.ContextFormatter (string value)
#logging_exception_prefix = %(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s

# Defines the format string for %(user_identity)s that is used in
# logging_context_format_string. Used by
# oslo_log.formatters.ContextFormatter (string value)
#logging_user_identity_format = %(user)s %(tenant)s %(domain)s %(user_domain)s %(project_domain)s

# List of package logging levels in logger=LEVEL pairs. This option is
# ignored if log_config_append is set. (list value)
#default_log_levels = amqp=WARN,amqplib=WARN,boto=WARN,qpid=WARN,sqlalchemy=WARN,suds=INFO,oslo.messaging=INFO,oslo_messaging=INFO,iso8601=WARN,requests.packages.urllib3.connectionpool=WARN,urllib3.connectionpool=WARN,websocket=WARN,requests.packages.urllib3.util.retry=WARN,urllib3.util.retry=WARN,keystonemiddleware=WARN,routes.middleware=WARN,stevedore=WARN,taskflow=WARN,keystoneauth=WARN,oslo.cache=INFO,oslo_policy=INFO,dogpile.core.dogpile=INFO

# Enables or disables publication of error events. (boolean value)
#publish_errors = false

# The format for an instance that is passed with the log message.
# (string value)
#instance_format = "[instance: %(uuid)s] "

# The format for an instance UUID that is passed with the log message.
# (string value)
#instance_uuid_format = "[instance: %(uuid)s] "

# Interval, number of seconds, of log rate limiting. (integer value)
#rate_limit_interval = 0

# Maximum number of logged messages per rate_limit_interval. (integer
# value)
#rate_limit_burst = 0

# Log level name used by rate limiting: CRITICAL, ERROR, INFO,
# WARNING, DEBUG or empty string. Logs with level greater or equal to
# rate_limit_except_level are not filtered. An empty string means that
# all levels are filtered. (string value)
#rate_limit_except_level = CRITICAL

# Enables or disables fatal status of deprecations. (boolean value)
#fatal_deprecations = false

#
# From rally
#

# A mktemp(1)-like format string that will be used to pattern the
# generated random string. It must contain two separate segments of at
# least three 'X's; the first one will be replaced by a portion of the
# owner ID (i.e task/subtask ID), and the second will be replaced with
# a random string. (string value)
#context_resource_name_format = <None>

# Print debugging output only for Rally. Off-site components stay
# quiet. (boolean value)
#rally_debug = false

# Size of raw result chunk in iterations (integer value)
# Minimum value: 1
#raw_result_chunk_size = 1000

# A mktemp(1)-like format string that will be used to pattern the
# generated random string. It must contain two separate segments of at
# least three 'X's; the first one will be replaced by a portion of the
# owner ID (i.e task/subtask ID), and the second will be replaced with
# a random string. (string value)
#scenario_resource_name_format = <None>

#
# From rally_openstack
#

# HTTP timeout for any of OpenStack service in seconds (floating point
# value)
#openstack_client_http_timeout = 180.0


[database]

#
# From oslo.db
#

# If True, SQLite uses synchronous mode. (boolean value)
#sqlite_synchronous = true

# The back end to use for the database. (string value)
# Deprecated group/name - [DEFAULT]/db_backend
#backend = sqlalchemy

# The SQLAlchemy connection string to use to connect to the database.
# (string value)
# Deprecated group/name - [DEFAULT]/sql_connection
# Deprecated group/name - [DATABASE]/sql_connection
# Deprecated group/name - [sql]/connection
#connection = <None>

# The SQLAlchemy connection string to use to connect to the slave
# database. (string value)
#slave_connection = <None>

# The SQL mode to be used for MySQL sessions. This option, including
# the default, overrides any server-set SQL mode. To use whatever SQL
# mode is set by the server configuration, set this to no value.
# Example: mysql_sql_mode= (string value)
#mysql_sql_mode = TRADITIONAL

# If True, transparently enables support for handling MySQL Cluster
# (NDB). (boolean value)
#mysql_enable_ndb = false

# Connections which have been present in the connection pool longer
# than this number of seconds will be replaced with a new one the next
# time they are checked out from the pool. (integer value)
# Deprecated group/name - [DATABASE]/idle_timeout
# Deprecated group/name - [database]/idle_timeout
# Deprecated group/name - [DEFAULT]/sql_idle_timeout
# Deprecated group/name - [DATABASE]/sql_idle_timeout
# Deprecated group/name - [sql]/idle_timeout
#connection_recycle_time = 3600

# Maximum number of SQL connections to keep open in a pool. Setting a
# value of 0 indicates no limit. (integer value)
# Deprecated group/name - [DEFAULT]/sql_max_pool_size
# Deprecated group/name - [DATABASE]/sql_max_pool_size
#max_pool_size = 5

# Maximum number of database connection retries during startup. Set to
# -1 to specify an infinite retry count. (integer value)
# Deprecated group/name - [DEFAULT]/sql_max_retries
# Deprecated group/name - [DATABASE]/sql_max_retries
#max_retries = 10

# Interval between retries of opening a SQL connection. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_retry_interval
# Deprecated group/name - [DATABASE]/reconnect_interval
#retry_interval = 10

# If set, use this value for max_overflow with SQLAlchemy. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_max_overflow
# Deprecated group/name - [DATABASE]/sqlalchemy_max_overflow
#max_overflow = 50

# Verbosity of SQL debugging information: 0=None, 100=Everything.
# (integer value)
# Minimum value: 0
# Maximum value: 100
# Deprecated group/name - [DEFAULT]/sql_connection_debug
#connection_debug = 0

# Add Python stack traces to SQL as comment strings. (boolean value)
# Deprecated group/name - [DEFAULT]/sql_connection_trace
#connection_trace = false

# If set, use this value for pool_timeout with SQLAlchemy. (integer
# value)
# Deprecated group/name - [DATABASE]/sqlalchemy_pool_timeout
#pool_timeout = <None>

# Enable the experimental use of database reconnect on connection
# lost. (boolean value)
#use_db_reconnect = false

# Seconds between retries of a database transaction. (integer value)
#db_retry_interval = 1

# If True, increases the interval between retries of a database
# operation up to db_max_retry_interval. (boolean value)
#db_inc_retry_interval = true

# If db_inc_retry_interval is set, the maximum seconds between retries
# of a database operation. (integer value)
#db_max_retry_interval = 10

# Maximum retries in case of connection error or deadlock error before
# error is raised. Set to -1 to specify an infinite retry count.
# (integer value)
#db_max_retries = 20

# Optional URL parameters to append onto the connection URL at connect
# time; specify as param1=value1&param2=value2&... (string value)
#connection_parameters =


[openstack]

#
# From rally_openstack
#

# Time to sleep after creating a resource before polling for it status
# (floating point value)
#cinder_volume_create_prepoll_delay = 2.0

# Time to wait for cinder volume to be created. (floating point value)
#cinder_volume_create_timeout = 600.0

# Interval between checks when waiting for volume creation. (floating
# point value)
#cinder_volume_create_poll_interval = 2.0

# Time to wait for cinder volume to be deleted. (floating point value)
#cinder_volume_delete_timeout = 600.0

# Interval between checks when waiting for volume deletion. (floating
# point value)
#cinder_volume_delete_poll_interval = 2.0

# Time to wait for cinder backup to be restored. (floating point
# value)
#cinder_backup_restore_timeout = 600.0

# Interval between checks when waiting for backup restoring. (floating
# point value)
#cinder_backup_restore_poll_interval = 2.0

# Time(in sec) to sleep after creating a resource before polling for
# it status. (floating point value)
#heat_stack_create_prepoll_delay = 2.0

# Time(in sec) to wait for heat stack to be created. (floating point
# value)
#heat_stack_create_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack
# creation. (floating point value)
#heat_stack_create_poll_interval = 1.0

# Time(in sec) to wait for heat stack to be deleted. (floating point
# value)
#heat_stack_delete_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack
# deletion. (floating point value)
#heat_stack_delete_poll_interval = 1.0

# Time(in sec) to wait for stack to be checked. (floating point value)
#heat_stack_check_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack
# checking. (floating point value)
#heat_stack_check_poll_interval = 1.0

# Time(in sec) to sleep after updating a resource before polling for
# it status. (floating point value)
#heat_stack_update_prepoll_delay = 2.0

# Time(in sec) to wait for stack to be updated. (floating point value)
#heat_stack_update_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack update.
# (floating point value)
#heat_stack_update_poll_interval = 1.0

# Time(in sec) to wait for stack to be suspended. (floating point
# value)
#heat_stack_suspend_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack suspend.
# (floating point value)
#heat_stack_suspend_poll_interval = 1.0

# Time(in sec) to wait for stack to be resumed. (floating point value)
#heat_stack_resume_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack resume.
# (floating point value)
#heat_stack_resume_poll_interval = 1.0

# Time(in sec) to wait for stack snapshot to be created. (floating
# point value)
#heat_stack_snapshot_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack snapshot
# to be created. (floating point value)
#heat_stack_snapshot_poll_interval = 1.0

# Time(in sec) to wait for stack to be restored from snapshot.
# (floating point value)
#heat_stack_restore_timeout = 3600.0

# Time interval(in sec) between checks when waiting for stack to be
# restored. (floating point value)
#heat_stack_restore_poll_interval = 1.0

# Time (in sec) to wait for stack to scale up or down. (floating point
# value)
#heat_stack_scale_timeout = 3600.0

# Time interval (in sec) between checks when waiting for a stack to
# scale up or down. (floating point value)
#heat_stack_scale_poll_interval = 1.0

# Interval(in sec) between checks when waiting for node creation.
# (floating point value)
#ironic_node_create_poll_interval = 1.0

# Ironic node create timeout (floating point value)
#ironic_node_create_timeout = 300

# Ironic node poll interval (floating point value)
#ironic_node_poll_interval = 1.0

# Ironic node create timeout (floating point value)
#ironic_node_delete_timeout = 300

# Time(in sec) to sleep after creating a resource before polling for
# the status. (floating point value)
#magnum_cluster_create_prepoll_delay = 5.0

# Time(in sec) to wait for magnum cluster to be created. (floating
# point value)
#magnum_cluster_create_timeout = 2400.0

# Time interval(in sec) between checks when waiting for cluster
# creation. (floating point value)
#magnum_cluster_create_poll_interval = 2.0

# Time(in sec) to wait for k8s pod to be created. (floating point
# value)
#k8s_pod_create_timeout = 1200.0

# Time interval(in sec) between checks when waiting for k8s pod
# creation. (floating point value)
#k8s_pod_create_poll_interval = 1.0

# Time(in sec) to wait for k8s rc to be created. (floating point
# value)
#k8s_rc_create_timeout = 1200.0

# Time interval(in sec) between checks when waiting for k8s rc
# creation. (floating point value)
#k8s_rc_create_poll_interval = 1.0

# Delay between creating Manila share and polling for its status.
# (floating point value)
#manila_share_create_prepoll_delay = 2.0

# Timeout for Manila share creation. (floating point value)
#manila_share_create_timeout = 300.0

# Interval between checks when waiting for Manila share creation.
# (floating point value)
#manila_share_create_poll_interval = 3.0

# Timeout for Manila share deletion. (floating point value)
#manila_share_delete_timeout = 180.0

# Interval between checks when waiting for Manila share deletion.
# (floating point value)
#manila_share_delete_poll_interval = 2.0

# Timeout for Manila access creation. (floating point value)
#manila_access_create_timeout = 300.0

# Interval between checks when waiting for Manila access creation.
# (floating point value)
#manila_access_create_poll_interval = 3.0

# Timeout for Manila access deletion. (floating point value)
#manila_access_delete_timeout = 180.0

# Interval between checks when waiting for Manila access deletion.
# (floating point value)
#manila_access_delete_poll_interval = 2.0

# mistral execution timeout (integer value)
#mistral_execution_timeout = 200

# Delay between creating Monasca metrics and polling for its elements.
# (floating point value)
#monasca_metric_create_prepoll_delay = 15.0

# Time to sleep after start before polling for status (floating point
# value)
#nova_server_start_prepoll_delay = 0.0

# Server start timeout (floating point value)
#nova_server_start_timeout = 300.0

# Server start poll interval (floating point value)
#nova_server_start_poll_interval = 1.0

# Time to sleep after stop before polling for status (floating point
# value)
#nova_server_stop_prepoll_delay = 0.0

# Server stop timeout (floating point value)
#nova_server_stop_timeout = 300.0

# Server stop poll interval (floating point value)
#nova_server_stop_poll_interval = 2.0

# Time to sleep after boot before polling for status (floating point
# value)
#nova_server_boot_prepoll_delay = 1.0

# Server boot timeout (floating point value)
#nova_server_boot_timeout = 300.0

# Server boot poll interval (floating point value)
#nova_server_boot_poll_interval = 2.0

# Time to sleep after delete before polling for status (floating point
# value)
#nova_server_delete_prepoll_delay = 2.0

# Server delete timeout (floating point value)
#nova_server_delete_timeout = 300.0

# Server delete poll interval (floating point value)
#nova_server_delete_poll_interval = 2.0

# Time to sleep after reboot before polling for status (floating point
# value)
#nova_server_reboot_prepoll_delay = 2.0

# Server reboot timeout (floating point value)
#nova_server_reboot_timeout = 300.0

# Server reboot poll interval (floating point value)
#nova_server_reboot_poll_interval = 2.0

# Time to sleep after rebuild before polling for status (floating
# point value)
#nova_server_rebuild_prepoll_delay = 1.0

# Server rebuild timeout (floating point value)
#nova_server_rebuild_timeout = 300.0

# Server rebuild poll interval (floating point value)
#nova_server_rebuild_poll_interval = 1.0

# Time to sleep after rescue before polling for status (floating point
# value)
#nova_server_rescue_prepoll_delay = 2.0

# Server rescue timeout (floating point value)
#nova_server_rescue_timeout = 300.0

# Server rescue poll interval (floating point value)
#nova_server_rescue_poll_interval = 2.0

# Time to sleep after unrescue before polling for status (floating
# point value)
#nova_server_unrescue_prepoll_delay = 2.0

# Server unrescue timeout (floating point value)
#nova_server_unrescue_timeout = 300.0

# Server unrescue poll interval (floating point value)
#nova_server_unrescue_poll_interval = 2.0

# Time to sleep after suspend before polling for status (floating
# point value)
#nova_server_suspend_prepoll_delay = 2.0

# Server suspend timeout (floating point value)
#nova_server_suspend_timeout = 300.0

# Server suspend poll interval (floating point value)
#nova_server_suspend_poll_interval = 2.0

# Time to sleep after resume before polling for status (floating point
# value)
#nova_server_resume_prepoll_delay = 2.0

# Server resume timeout (floating point value)
#nova_server_resume_timeout = 300.0

# Server resume poll interval (floating point value)
#nova_server_resume_poll_interval = 2.0

# Time to sleep after pause before polling for status (floating point
# value)
#nova_server_pause_prepoll_delay = 2.0

# Server pause timeout (floating point value)
#nova_server_pause_timeout = 300.0

# Server pause poll interval (floating point value)
#nova_server_pause_poll_interval = 2.0

# Time to sleep after unpause before polling for status (floating
# point value)
#nova_server_unpause_prepoll_delay = 2.0

# Server unpause timeout (floating point value)
#nova_server_unpause_timeout = 300.0

# Server unpause poll interval (floating point value)
#nova_server_unpause_poll_interval = 2.0

# Time to sleep after shelve before polling for status (floating point
# value)
#nova_server_shelve_prepoll_delay = 2.0

# Server shelve timeout (floating point value)
#nova_server_shelve_timeout = 300.0

# Server shelve poll interval (floating point value)
#nova_server_shelve_poll_interval = 2.0

# Time to sleep after unshelve before polling for status (floating
# point value)
#nova_server_unshelve_prepoll_delay = 2.0

# Server unshelve timeout (floating point value)
#nova_server_unshelve_timeout = 300.0

# Server unshelve poll interval (floating point value)
#nova_server_unshelve_poll_interval = 2.0

# Time to sleep after image_create before polling for status (floating
# point value)
#nova_server_image_create_prepoll_delay = 0.0

# Server image_create timeout (floating point value)
#nova_server_image_create_timeout = 300.0

# Server image_create poll interval (floating point value)
#nova_server_image_create_poll_interval = 2.0

# Time to sleep after image_delete before polling for status (floating
# point value)
#nova_server_image_delete_prepoll_delay = 0.0

# Server image_delete timeout (floating point value)
#nova_server_image_delete_timeout = 300.0

# Server image_delete poll interval (floating point value)
#nova_server_image_delete_poll_interval = 2.0

# Time to sleep after resize before polling for status (floating point
# value)
#nova_server_resize_prepoll_delay = 2.0

# Server resize timeout (floating point value)
#nova_server_resize_timeout = 400.0

# Server resize poll interval (floating point value)
#nova_server_resize_poll_interval = 5.0

# Time to sleep after resize_confirm before polling for status
# (floating point value)
#nova_server_resize_confirm_prepoll_delay = 0.0

# Server resize_confirm timeout (floating point value)
#nova_server_resize_confirm_timeout = 200.0

# Server resize_confirm poll interval (floating point value)
#nova_server_resize_confirm_poll_interval = 2.0

# Time to sleep after resize_revert before polling for status
# (floating point value)
#nova_server_resize_revert_prepoll_delay = 0.0

# Server resize_revert timeout (floating point value)
#nova_server_resize_revert_timeout = 200.0

# Server resize_revert poll interval (floating point value)
#nova_server_resize_revert_poll_interval = 2.0

# Time to sleep after live_migrate before polling for status (floating
# point value)
#nova_server_live_migrate_prepoll_delay = 1.0

# Server live_migrate timeout (floating point value)
#nova_server_live_migrate_timeout = 400.0

# Server live_migrate poll interval (floating point value)
#nova_server_live_migrate_poll_interval = 2.0

# Time to sleep after migrate before polling for status (floating
# point value)
#nova_server_migrate_prepoll_delay = 1.0

# Server migrate timeout (floating point value)
#nova_server_migrate_timeout = 400.0

# Server migrate poll interval (floating point value)
#nova_server_migrate_poll_interval = 2.0

# Nova volume detach timeout (floating point value)
#nova_detach_volume_timeout = 200.0

# Nova volume detach poll interval (floating point value)
#nova_detach_volume_poll_interval = 2.0

# Enable or disable osprofiler to trace the scenarios (boolean value)
#enable_profiler = true

# Interval between checks when waiting for a VM to become pingable
# (floating point value)
#vm_ping_poll_interval = 1.0

# Time to wait for a VM to become pingable (floating point value)
#vm_ping_timeout = 120.0

# Time to wait for glance image to be deleted. (floating point value)
#glance_image_delete_timeout = 120.0

# Interval between checks when waiting for image deletion. (floating
# point value)
#glance_image_delete_poll_interval = 1.0

# Time to sleep after creating a resource before polling for it status
# (floating point value)
#glance_image_create_prepoll_delay = 2.0

# Time to wait for glance image to be created. (floating point value)
#glance_image_create_timeout = 120.0

# Interval between checks when waiting for image creation. (floating
# point value)
#glance_image_create_poll_interval = 1.0

# Watcher audit launch interval (floating point value)
#watcher_audit_launch_poll_interval = 2.0

# Watcher audit launch timeout (integer value)
#watcher_audit_launch_timeout = 300

# image URL (string value)
#img_url = http://download.cirros-cloud.net/0.5.2/cirros-0.5.2-x86_64-disk.img

# Image disk format to use when creating the image (string value)
#img_disk_format = qcow2

# Image container format to use when creating the image (string value)
#img_container_format = bare

# Regular expression for name of a public image to discover it in the
# cloud and use it for the tests. Note that when Rally is searching
# for the image, case insensitive matching is performed. Specify
# nothing ('img_name_regex =') if you want to disable discovering. In
# this case Rally will create needed resources by itself if the values
# for the corresponding config options are not specified in the
# Tempest config file (string value)
#img_name_regex = ^.*(cirros|testvm).*$

# Role required for users to be able to create Swift containers
# (string value)
#swift_operator_role = member

# User role that has reseller admin (string value)
#swift_reseller_admin_role = ResellerAdmin

# Role required for users to be able to manage Heat stacks (string
# value)
#heat_stack_owner_role = heat_stack_owner

# Role for Heat template-defined users (string value)
#heat_stack_user_role = heat_stack_user

# Primary flavor RAM size used by most of the test cases (integer
# value)
#flavor_ref_ram = 64

# Alternate reference flavor RAM size used by test that need two
# flavors, like those that resize an instance (integer value)
#flavor_ref_alt_ram = 128

# Primary flavor disk size in GiB used by most of the test cases
# (integer value)
#flavor_ref_disk = 5

# Alternate reference flavor disk size in GiB used by tests that need
# two flavors, like those that resize an instance (integer value)
#flavor_ref_alt_disk = 5

# RAM size flavor used for orchestration test cases (integer value)
#heat_instance_type_ram = 64

# Disk size requirement in GiB flavor used for orchestration test
# cases (integer value)
#heat_instance_type_disk = 5

# How many concurrent threads to use for serving roles context
# (integer value)
# Deprecated group/name - [roles_context]/resource_management_workers
#roles_context_resource_management_workers = 30

# The number of concurrent threads to use for serving users context.
# (integer value)
# Deprecated group/name - [users_context]/resource_management_workers
#users_context_resource_management_workers = 20

# ID of domain in which projects will be created. (string value)
#project_domain = default

# ID of domain in which users will be created. (string value)
#user_domain = default

# The default role name of the keystone to assign to users. (string
# value)
#keystone_default_role = member

# A timeout in seconds for deleting resources (integer value)
#resource_deletion_timeout = 600

# Number of cleanup threads to run (integer value)
#cleanup_threads = 20

# Neutron create loadbalancer timeout (floating point value)
#neutron_create_loadbalancer_timeout = 500.0

# Neutron create loadbalancer poll interval (floating point value)
#neutron_create_loadbalancer_poll_interval = 2.0

# Whether Neutron API is older then OpenStack Newton or not. Based on
# the option, some external fields for identifying resources can be
# applied. (boolean value)
#pre_newton_neutron = false

# Neutron L2 agent types to find hosts to bind (list value)
#neutron_bind_l2_agent_types = Open vSwitch agent,Linux bridge agent

# Octavia create loadbalancer timeout (floating point value)
#octavia_create_loadbalancer_timeout = 500.0

# Octavia delete loadbalancer timeout (floating point value)
#octavia_delete_loadbalancer_timeout = 50.0

# Octavia create loadbalancer poll interval (floating point value)
#octavia_create_loadbalancer_poll_interval = 2.0

# Mode of embedding OSProfiler's chart. Can be 'text' (embed only
# trace id), 'raw' (embed raw osprofiler's native report) or a path to
# directory (raw osprofiler's native reports for each iteration will
# be saved separately there to decrease the size of rally report
# itself) (string value)
#osprofiler_chart_mode = <None>
