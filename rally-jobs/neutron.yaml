{% set image_name = "^cirros.*-disk$" %}

{% set flavor_name = "m1.tiny" %}

{% set smoke = 0 %}

---
version: 2
title: Task for rally-task-neutron job
subtasks:
  - title: NeutronNetworks.create_and_list_networks tests
    workloads:
      - scenario:
          NeutronNetworks.create_and_list_networks:
            network_create_args: {}
        contexts:
          users:
            tenants: {{ smoke or 2 }}
            users_per_tenant: {{ smoke or 1 }}
          quotas:
            neutron:
              network: -1
        runner:
          constant:
            times: {{ smoke or 8 }}
            concurrency: {{ smoke or 4 }}
        sla:
          failure_rate:
            max: 20
      - scenario:
          NeutronNetworks.create_and_list_networks:
            network_create_args:
              provider:network_type: vxlan
        contexts:
          users:
            tenants: {{ smoke or 2 }}
            users_per_tenant: {{ smoke or 1 }}
          quotas:
            neutron:
              network: -1
          roles:
            - admin
        runner:
          constant:
            times: {{ smoke or 8 }}
            concurrency: {{ smoke or 4 }}
        sla:
          failure_rate:
            max: 20
  - title: NeutronNetworks.set_and_clear_router_gateway tests
    scenario:
      NeutronNetworks.set_and_clear_router_gateway:
        network_create_args:
          router:external: true
        router_create_args: {}
    contexts:
      network: {}
      users:
        tenants: 2
        users_per_tenant: 2
      quotas:
        neutron:
          network: -1
          router: -1
      roles:
        - admin
    runner:
      constant:
        times: 4
        concurrency: 2
    sla:
      failure_rate:
        max: 0
  - title: NeutronNetworks.create_and_show_network tests
    scenario:
      NeutronNetworks.create_and_show_network:
        network_create_args: {}
    contexts:
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          network: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 0
  - title: NeutronNetworks.create_and_list_subnets tests
    scenario:
      NeutronNetworks.create_and_list_subnets:
        network_create_args: {}
        subnet_create_args: {}
        subnet_cidr_start: 1.1.0.0/30
        subnets_per_network: 2
    contexts:
      network: {}
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          network: -1
          subnet: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronNetworks.create_and_show_subnets tests
    scenario:
      NeutronNetworks.create_and_show_subnets:
        subnet_cidr_start: 1.1.0.0/30
        subnets_per_network: 2
    contexts:
      network: {}
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          network: -1
          subnet: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronSecurityGroup.create_and_list_security_groups tests
    scenario:
      NeutronSecurityGroup.create_and_list_security_groups:
        security_group_create_args: {}
    contexts:
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          security_group: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronSecurityGroup.create_and_show_security_group tests
    scenario:
      NeutronSecurityGroup.create_and_show_security_group:
        security_group_create_args: {}
    contexts:
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          security_group: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronSecurityGroup.create_and_delete_security_groups tests
    scenario:
      NeutronSecurityGroup.create_and_delete_security_groups:
        security_group_create_args: {}
    contexts:
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          security_group: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronSecurityGroup.create_and_update_security_groups tests
    scenario:
      NeutronSecurityGroup.create_and_update_security_groups:
        security_group_create_args: {}
        security_group_update_args: {}
    contexts:
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          security_group: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronSecurityGroup.create_and_list_security_group_rules tests
    scenario:
      NeutronSecurityGroup.create_and_list_security_group_rules:
        security_group_args: {}
        security_group_rule_args: {}
        security_group_rules_count: 20
    contexts:
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          security_group: -1
          security_group_rule: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronSecurityGroup.create_and_show_security_group_rule tests
    scenario:
      NeutronSecurityGroup.create_and_show_security_group_rule:
        security_group_args: {}
        security_group_rule_args: {}
    contexts:
      users:
        tenants: 2
        users_per_tenant: 1
      quotas:
        neutron:
          security_group: -1
    runner:
      constant:
        times: 8
        concurrency: 4
    sla:
      failure_rate:
        max: 0
  - title: NeutronSecurityGroup.create_and_delete_security_group_rule tests
    scenario:
      NeutronSecurityGroup.create_and_delete_security_group_rule:
        security_group_args: {}
        security_group_rule_args: {}
    contexts:
      users:
        tenants: 2
        users_per_tenant: 1
    runner:
      constant:
        times: 4
        concurrency: 4
    sla:
      failure_rate:
        max: 0
  - title: NeutronNetworks.create_and_list_floating_ips tests
    scenario:
      NeutronNetworks.create_and_list_floating_ips:
        floating_network: public
        floating_ip_args: {}
    contexts:
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          floatingip: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 0
  - title: NeutronNetworks.associate_and_dissociate_floating_ips tests
    scenario:
      NeutronNetworks.associate_and_dissociate_floating_ips:
        floating_network: public
    contexts:
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          floatingip: -1
          network: -1
          port: -1
          router: -1
          subnet: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 0
  - title: NeutronNetworks.create_and_list_routers tests
    scenario:
      NeutronNetworks.create_and_list_routers:
        subnet_cidr_start: 1.1.0.0/30
        subnets_per_network: 2
    contexts:
      network: {}
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          network: -1
          subnet: -1
          router: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronNetworks.create_and_show_routers tests
    scenario:
      NeutronNetworks.create_and_show_routers:
        subnet_cidr_start: 1.1.0.0/30
        subnets_per_network: 2
    contexts:
      network: {}
      users:
        tenants: 2
        users_per_tenant: 2
      quotas:
        neutron:
          network: -1
          subnet: -1
          router: -1
    runner:
      constant:
        times: 4
        concurrency: 2
    sla:
      failure_rate:
        max: 0
  - title: NeutronNetworks.create_and_list_ports tests
    scenario:
      NeutronNetworks.create_and_list_ports:
        ports_per_network: 4
    contexts:
      network: {}
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          network: -1
          subnet: -1
          router: -1
          port: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronNetworks.list_agents tests
    scenario:
      NeutronNetworks.list_agents:
        agent_args: {}
    contexts:
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
    runner:
      constant:
        times: {{ smoke or 4 }}
        concurrency: {{ smoke or 2 }}
    sla:
      failure_rate:
        max: 0
  - title: NeutronNetworks.create_and_show_ports tests
    scenario:
      NeutronNetworks.create_and_show_ports:
        ports_per_network: 2
    contexts:
      network: {}
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          network: -1
          port: -1
    runner:
      constant:
        times: {{ smoke or 4 }}
        concurrency: {{ smoke or 2 }}
    sla:
      failure_rate:
        max: 0
  - title: NeutronNetworks.create_and_update_networks tests
    scenario:
      NeutronNetworks.create_and_update_networks:
        network_create_args: {}
        network_update_args:
          admin_state_up: false
    contexts:
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          network: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronNetworks.create_and_update_subnets tests
    scenario:
      NeutronNetworks.create_and_update_subnets:
        network_create_args: {}
        subnet_create_args: {}
        subnet_cidr_start: 1.4.0.0/16
        subnets_per_network: 2
        subnet_update_args:
          enable_dhcp: false
    contexts:
      network: {}
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          network: -1
          subnet: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronNetworks.create_and_update_routers tests
    scenario:
      NeutronNetworks.create_and_update_routers:
        network_create_args: {}
        subnet_create_args: {}
        subnet_cidr_start: 1.1.0.0/30
        subnets_per_network: 2
        router_create_args: {}
        router_update_args:
          admin_state_up: false
    contexts:
      network: {}
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          network: -1
          subnet: -1
          router: -1
    runner:
      constant:
        times: {{ smoke or 4 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronNetworks.create_and_delete_networks tests
    scenario:
      NeutronNetworks.create_and_delete_networks:
        network_create_args: {}
    contexts:
      users:
        tenants: {{ smoke or 3 }}
        users_per_tenant: {{ smoke or 2 }}
      quotas:
        neutron:
          network: -1
          subnet: -1
    runner:
      constant:
        times: {{ smoke or 20 }}
        concurrency: {{ smoke or 10 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronNetworks.create_and_delete_subnets tests
    scenario:
      NeutronNetworks.create_and_delete_subnets:
        network_create_args: {}
        subnet_create_args: {}
        subnet_cidr_start: 1.1.0.0/30
        subnets_per_network: 2
    contexts:
      network: {}
      users:
        tenants: {{ smoke or 3 }}
        users_per_tenant: {{ smoke or 2 }}
      quotas:
        neutron:
          network: -1
          subnet: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronNetworks.create_and_delete_floating_ips tests
    scenario:
      NeutronNetworks.create_and_delete_floating_ips:
        floating_network: public
        floating_ip_args: {}
    contexts:
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          floatingip: -1
    runner:
      constant:
        times: {{ smoke or 8 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 0
  - title: NeutronNetworks.create_and_delete_routers tests
    scenario:
      NeutronNetworks.create_and_delete_routers:
        network_create_args: {}
        subnet_create_args: {}
        subnet_cidr_start: 1.1.0.0/30
        subnets_per_network: 2
        router_create_args: {}
    contexts:
      network: {}
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          network: -1
          subnet: -1
          router: -1
    runner:
      constant:
        times: {{ smoke or 4 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronNetworks.create_and_delete_ports tests
    scenario:
      NeutronNetworks.create_and_delete_ports:
        network_create_args: {}
        port_create_args: {}
        ports_per_network: 5
    contexts:
      network: {}
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          network: -1
          port: -1
    runner:
      constant:
        times: {{ smoke or 4 }}
        concurrency: {{ smoke or 4 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronNetworks.create_and_update_ports tests
    scenario:
      NeutronNetworks.create_and_update_ports:
        network_create_args: {}
        port_create_args: {}
        ports_per_network: 2
        port_update_args:
          admin_state_up: false
          device_id: dummy_id
          device_owner: dummy_owner
    contexts:
      network: {}
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      quotas:
        neutron:
          network: -1
          port: -1
    runner:
      constant:
        times: {{ smoke or 10 }}
        concurrency: {{ smoke or 5 }}
    sla:
      failure_rate:
        max: 20
  - title: NeutronSubnets.delete_subnets tests
    scenario:
      NeutronSubnets.delete_subnets: {}
    contexts:
      users:
        tenants: 1
        users_per_tenant: {{ smoke or 15 }}
        user_choice_method: round_robin
      quotas:
        neutron:
          network: -1
          subnet: -1
      network:
        subnets_per_network: 15
        dualstack: true
        router: {}
    runner:
      constant:
        times: {{ smoke or 15 }}
        concurrency: {{ smoke or 15 }}
    sla:
      failure_rate:
        max: 0
  - title: NeutronNetworks.create_and_bind_ports tests
    scenario:
      NeutronNetworks.create_and_bind_ports:
        ports_per_network: 5
    contexts:
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
      roles:
        - admin
      quotas:
        neutron:
          network: -1
          subnet: -1
          port: -1
      network: {}
      networking_agents: {}
    runner:
      constant:
        times: {{ smoke or 10 }}
        concurrency: {{ smoke or 5 }}
    sla:
      failure_rate:
        max: 0
  - title: Quotas.neutron_update tests
    scenario:
      Quotas.neutron_update:
        max_quota: 1024
    contexts:
      users:
        tenants: {{ smoke or 2 }}
        users_per_tenant: {{ smoke or 1 }}
    runner:
      constant:
        times: {{ smoke or 10 }}
        concurrency: {{ smoke or 2 }}
    sla:
      failure_rate:
        max: 0
  - title: NovaServers.boot_and_delete_server tests
    scenario:
      NovaServers.boot_and_delete_server:
        auto_assign_nic: true
        flavor:
          name: m1.tiny
        image:
          name: {{ image_name }}
          list_kwargs:
            visibility: public
    contexts:
      users:
        tenants: 1
        users_per_tenant: 1
      network:
        start_cidr: 10.2.0.0/24
        networks_per_tenant: 2
        dns_nameservers:
          - 8.8.8.8
          - 8.8.4.4
        router:
          external: false
    runner:
      constant:
        times: 1
        concurrency: 1
    sla:
      failure_rate:
        max: 0
